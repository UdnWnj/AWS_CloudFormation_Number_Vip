AWSTemplateFormatVersion: 2010-09-09
Metadata:
  'AWS::CloudFormation::Designer':
    1258d79b-1357-4fae-9782-7d4d4d551d33:
      size:
        width: 60
        height: 60
      position:
        x: 410
        'y': 140
      z: 0
      embeds: []
    8c232115-f8a1-4e15-b205-3d806a9ca958:
      size:
        width: 60
        height: 60
      position:
        x: 700
        'y': 140
      z: 0
      embeds: []
    509e3f64-fc83-42f8-96bf-5cc7bb816f23:
      size:
        width: 60
        height: 60
      position:
        x: 560
        'y': 140
      z: 0
      embeds: []
      dependson:
        - 1258d79b-1357-4fae-9782-7d4d4d551d33
Resources:
  Lambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        ZipFile: >
          var AWS = require("aws-sdk");
          var docClient = new AWS.DynamoDB.DocumentClient();

          exports.handler = function(event, context, callback) 
          {
              console.log('Received event:', JSON.stringify(event, null, 2));

              var params = 
              {
                  TableName: "Jimmy_Number_VIP_ByExt_Table",
                  Key: {
                          "extension": event.Details.Parameters.requestedExtension
                       }
              };

              docClient.get(params, function(err, data) 
              {
                if (err) 
                {
                    console.error("Unable to read item. Error JSON:", JSON.stringify(err, null, 2));
                } else if (data.Item == null) 
                {
                    console.log("Extension not found in lookup");
                    callback(null, {agent: "NotFound", requestedExtension : event.Details.Parameters.requestedExtension});
                } else 
                {
                    console.log("GetItem succeeded:", JSON.stringify(data, null, 2));
                }
                callback(null, data.Item);            
              }); 
          };
      Description: Lambda(nodejs) query Ext in DaynmoDB return an AgentNumber Queue by jimmy
      FunctionName: Jimmy_Number_VIP_ByExt-Lambda
      Role: !GetAtt 
        - IAMRole
        - Arn
      Handler: index.handler
      MemorySize: 128
      Runtime: nodejs16.x
      Timeout: 5
      DeadLetterConfig: !Ref 'AWS::NoValue'
      KmsKeyArn: ''
      TracingConfig:
        Mode: PassThrough
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 509e3f64-fc83-42f8-96bf-5cc7bb816f23
    DependsOn:
      - DynTable
      - IAMRole
  DynTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: Jimmy_Number_VIP_ByExt_Table
      BillingMode: PROVISIONED
      AttributeDefinitions:
        - AttributeName: extension
          AttributeType: S
      KeySchema:
        - AttributeName: extension
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1258d79b-1357-4fae-9782-7d4d4d551d33
  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: inLine-Jimmy_Number_VIP_ByExt
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Jimmy_Number_VIP_ByExt-Lambda:*
              - Effect: Allow
                Action:
                  - 'dynamodb:GetItem'
                Resource: !GetAtt 
                  - DynTable
                  - Arn
      RoleName: !Join 
        - ''
        - - !Ref 'AWS::Region'
          - '-Jimmy_Number_VIP_ByExt-IAMRole'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 8c232115-f8a1-4e15-b205-3d806a9ca958
